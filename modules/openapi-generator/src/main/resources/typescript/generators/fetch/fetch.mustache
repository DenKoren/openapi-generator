import { ResponseContext } from './http/http';
import * as models from './models/all';
import { Configuration} from './configuration'

{{#models}}
{{#model}}
import { {{name}} } from './models/{{name}}';
{{/model}}
{{/models}}
{{#apiInfo}}
{{#apis}}

{{#operations}}
import { {{classname}}RequestFactory, {{classname}}ResponseProcessor} from "./apis/{{classname}}";
export class {{classname}} {
	private requestFactory: {{classname}}RequestFactory;
	private responseProcessor: {{classname}}ResponseProcessor;

	public constructor(private configuration: Configuration) {
		this.requestFactory = new {{classname}}RequestFactory(configuration);
		this.responseProcessor = new {{classname}}ResponseProcessor();
	}

{{#operation}}
    public {{nickname}}({{#allParams}}{{paramName}}{{^required}}?{{/required}}: {{{dataType}}}, {{/allParams}}options?: any): Promise<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}void{{/returnType}}> {
    	const requestContext = this.requestFactory.{{nickname}}({{#allParams}}{{paramName}}, {{/allParams}}options);
    	
    	return this.configuration.httpApi.send(requestContext).then((response: ResponseContext) => {
    		return this.responseProcessor.{{nickname}}(response);
    	});
    }
	
{{/operation}}

}

{{/operations}}


{{/apis}}
{{/apiInfo}}